const { ChannelType } = require("discord.js");

/**
 * @param {import('discord.js').GuildMember} member
 * @param {import('discord.js').GuildTextBasedChannel} giveawayChannel
 * @param {number} duration
 * @param {string} prize
 * @param {number} winners
 * @param {import('discord.js').User} [host]
 * @param {string[]} [allowedRoles]
 */
module.exports = async (member, giveawayChannel, duration, prize, winners, host, allowedRoles = []) => {
  try {
    if (!host) host = member.user;
    if (!member.permissions.has("ManageMessages")) {
      return "–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–¥–∞—á–∏.";
    }

    if (!giveawayChannel.type === ChannelType.GuildText) {
      return "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞–∑–¥–∞—á—É —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.";
    }

    /**
     * @type {import("discord-giveaways").GiveawayStartOptions}
     */
    const options = {
      duration: duration,
      prize,
      winnerCount: winners,
      hostedBy: host,
      thumbnail: "https://cdn-icons-png.flaticon.com/512/6021/6021967.png",
      messages: {
        giveaway: "üéâ **–†–ê–ó–î–ê–ß–ê** üéâ",
        giveawayEnded: "üéâ **–†–ê–ó–î–ê–ß–ê –ó–ê–ö–û–ù–ß–ò–õ–ê–°–¨** üéâ",
        inviteToParticipate: "–†–µ–∞–≥–∏—Ä—É–π—Ç–µ —Å –ø–æ–º–æ—â—å—é üéÅ —á—Ç–æ-–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å!",
        dropMessage: "–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Ç—Ä–µ–∞–≥–∏—Ä—É–µ—Ç —Å üéÅ, —á—Ç–æ–±—ã –≤—ã–∏–≥—Ä–∞—Ç—å!",
        hostedBy: `\n–ê–≤—Ç–æ—Ä: {this.hostedBy}`,
        winMessage: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, {winners}! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{this.prize}**!\n{this.messageURL}",
        winners: "**–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:**",
        noWinner: "–†–∞–∑–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
        drawing: "–ù–∞—á–∞–ª–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {timestamp}.",
        endedAt: "–ó–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –≤",
        embedFooter: "{this.winnerCount} –ü–æ–±–µ–¥–∏—Ç–µ–ª—å(—ã)",
      },
    };

    if (allowedRoles.length > 0) {
      options.exemptMembers = (member) => !member.roles.cache.find((role) => allowedRoles.includes(role.id));
    }

    await member.client.giveawaysManager.start(giveawayChannel, options);
    return `–†–∞–∑–¥–∞—á–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ ${giveawayChannel}`;
  } catch (error) {
    member.client.logger.error("Giveaway Start", error);
    return `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ä–∞–∑–¥–∞—á–∏: ${error.message}`;
  }
};
