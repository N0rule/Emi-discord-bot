const { EmbedBuilder, ApplicationCommandOptionType } = require("discord.js");
const { getMemberStats } = require("@schemas/MemberStats");
const { EMBED_COLORS } = require("@root/config");
const { stripIndents } = require("common-tags");

/**
 * @type {import("@structures/Command")}
 */
module.exports = {
  name: "stats",
  description: "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  cooldown: 5,
  category: "STATS",
  command: {
    enabled: true,
    usage: "[@member|id]",
  },
  slashCommand: {
    enabled: true,
    options: [
      {
        name: "user",
        description: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        type: ApplicationCommandOptionType.User,
        required: false,
      },
    ],
  },

  async messageRun(message, args, data) {
    const target = (await message.guild.resolveMember(args[0])) || message.member;
    const response = await stats(target, data.settings);
    await message.safeReply(response);
  },

  async interactionRun(interaction, data) {
    const member = interaction.options.getMember("user") || interaction.member;
    const response = await stats(member, data.settings);
    await interaction.followUp(response);
  },
};

/**
 * @param {import('discord.js').GuildMember} member
 * @param {object} settings
 */
async function stats(member, settings) {
  if (!settings.stats.enabled) return "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ";
  const memberStats = await getMemberStats(member.guild.id, member.id);

  const embed = new EmbedBuilder()
    .setThumbnail(member.user.displayAvatarURL())
    .setColor(EMBED_COLORS.BOT_EMBED)
    .addFields(
      {
        name: "–¢–µ–≥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        value: member.user.tag,
        inline: true,
      },
      {
        name: "ID",
        value: member.id,
        inline: true,
      },
      {
        name: "‚åö –ß–ª–µ–Ω —Å–µ—Ä–≤–µ—Ä–∞ —Å",
        value: member.joinedAt.toLocaleString(),
        inline: false,
      },
      {
        name: "üí¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π",
        value: stripIndents`
      ‚ùØ –°–æ–æ–±—â–µ–Ω–∏–π: ${memberStats.messages}
      ‚ùØ –ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥: ${memberStats.commands.prefix}
      ‚ùØ –°–ª–µ—à(/) –∫–æ–º–∞–Ω–¥: ${memberStats.commands.slash}
      ‚ùØ –û–ø—Ç –ü–æ–ª—É—á–µ–Ω–æ: ${memberStats.xp}
      ‚ùØ –¢–µ–∫—É—â–∏–π –£—Ä–æ–≤–µ–Ω—å: ${memberStats.level}
    `,
        inline: false,
      },
      {
        name: "üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–∞—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        value: stripIndents`
      ‚ùØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–π: ${memberStats.voice.connections}
      ‚ùØ –í—Ä–µ–º–µ–Ω–∏ –ü—Ä–æ–≤–µ–¥–µ–Ω–æ: ${Math.floor(memberStats.voice.time / 60)} –º–∏–Ω
    `,
      }
    )
    .setFooter({ text: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞" })
    .setTimestamp();

  return { embeds: [embed] };
}
