const { TicTacToe } = require("discord-gamecord");
const { ApplicationCommandOptionType, EmbedBuilder } = require("discord.js");

/**
 * @type {import("@structures/Command")}
 */

module.exports = {
  name: "tictactoe",
  description: "–ò–≥—Ä–∞–π—Ç–µ –≤ –ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏ —Å –¥—Ä—É–∑—å—è–º–∏",
  cooldown: 40,
  category: "FUN",
  botPermissions: ["SendMessages", "EmbedLinks", "AddReactions", "ReadMessageHistory", "ManageMessages"],
  command: {
    enabled: false,
  },
  slashCommand: {
    enabled: true,
    ephermal: true,
    options: [
      {
        name: "user",
        description: "Select a user to play",
        type: ApplicationCommandOptionType.User,
        required: true,
      },
    ],
  },

  async interactionRun(interaction) {
    const Game = new TicTacToe({
      message: interaction,
      isSlashGame: true,
      opponent: interaction.options.getUser("user"),
      embed: {
        title: "–ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏",
        color: "#5865F2",
        statusTitle: "–°—Ç–∞—Ç—É—Å",
        overTitle: "–ö–æ–Ω–µ—Ü –ò–≥—Ä—ã",
      },
      emojis: {
        xButton: "‚ùå",
        oButton: "üîµ",
        blankButton: "‚ûñ",
      },
      mentionUser: true,
      timeoutTime: 60000,
      xButtonStyle: "DANGER",
      oButtonStyle: "PRIMARY",
      turnMessage: "{emoji} | –û—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–∞ **{player}**.",
      winMessage: "{emoji} | **{player}** –≤—ã–∏–≥—Ä–∞–ª –≤ –ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏.",
      tieMessage: "–ù–∏—á—å—è!–ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª –∏–≥—Ä—É!",
      timeoutMessage: "–ò–≥—Ä–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!–ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª –∏–≥—Ä—É!",
      playerOnlyMessage: "–¢–æ–ª—å–∫–æ {player} –∏ {opponent} –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏.",
      requestMessage: "{player} –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –Ω–∞ —Ä–∞—É–Ω–¥ –≤ **–ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏**.",
      rejectMessage: "–ò–≥—Ä–æ–∫ –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—É–Ω–¥ –≤ **–ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏**.",
    });

    Game.startGame();
    Game.on("gameOver", (result) => {
      //   console.log(result); // =>  { result... }
      const winners = result.winner;
      const winner = `<@${winners}>`;
      if (result.result === "tie") {
        const embed = new EmbedBuilder()
          .setTitle("–ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏")
          .setDescription("–ù–∏—á—å—è! –ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª –∏–≥—Ä—É!")
          .setColor("Red")
          .setTimestamp();
        interaction.followUp({ embeds: [embed] });
      } else if (result.result === "win") {
        const embed = new EmbedBuilder()
          .setTitle("–ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏")
          .setDescription(`${winner} –≤—ã–∏–≥—Ä–∞–ª –≤ –ö—Ä–µ—Å—Ç–∏–∫–∏ –ù–æ–ª–∏–∫–∏.`)
          .setColor("Green")
          .setTimestamp();

        interaction.followUp({ embeds: [embed] });
      }
    });
  },
};
